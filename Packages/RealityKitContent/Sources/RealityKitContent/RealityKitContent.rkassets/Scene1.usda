#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 1.0 (409.60.6)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["El_Capitan", "Sphere", "Sky"]
    def "El_Capitan" (
        active = true
        references = @El_Capitan.usdz@
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (0.06859922, 0.06859922, 0.06859922)
        float3 xformOp:translate = (0, 0, -2.9661481)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "ImageBasedLight"
        {
            asset ibl = @ImageBasedLight.exr@
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }

        def RealityKitComponent "ImageBasedLightReceiver"
        {
            rel iblEntity = </Root/El_Capitan>
            uniform token info:id = "RealityKit.ImageBasedLightReceiver"
        }
    }

    def Sphere "Sphere" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (3.1415927, 0, 0)
        }
    )
    {
        rel material:binding = </Root/Sky> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = -10
        quatf xformOp:orient = (-4.371139e-8, 1, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Sphere/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }

        def RealityKitComponent "ImageBasedLight"
        {
            asset ibl = @ImageBasedLight.exr@
            uniform token info:id = "RealityKit.ImageBasedLight"
            bool isGlobalIBL = 0
        }

        def RealityKitComponent "ImageBasedLightReceiver"
        {
            rel iblEntity = </Root/Sphere>
            uniform token info:id = "RealityKit.ImageBasedLightReceiver"
        }
    }

    def Material "Sky"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        prepend token outputs:surface.connect = </Root/Sky/UsdPreviewSurface.outputs:surface>

        def Shader "UsdPreviewSurface"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.4974573, 0.6571486, 0.8343395) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:diffuseColor.connect = </Root/Sky/diffuseColor.outputs:rgb>
            token outputs:surface
        }

        def Shader "diffuseColor"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file = @skybox-lake-clouds.jpg@
            float2 inputs:st.connect = </Root/Sky/diffuseColor/TexCoordReader.outputs:result>
            color3f outputs:rgb

            def Shader "TexCoordReader"
            {
                uniform token info:id = "UsdPrimvarReader_float2"
                token inputs:varname.connect = </Root/Sky/UsdPreviewSurface.inputs:frame:stPrimvarName>
                float2 outputs:result
            }
        }
    }
}

